set -e
. defStone.env
export vers="3.2.15"

rm -rf *.log *.out

newExtent -s product/bin/extent0.dbf $GEMSTONE_NAME

$GS_HOME/shared/repos/Rowan/platforms/gemstone/topaz/3.2.15/installRowan $GEMSTONE_NAME

startTopaz $GEMSTONE_NAME -l << EOF

  iferr 1 stk
  iferr 2 stack
  iferr 3 exit

  set user DataCurator p swordfish
  set user SystemUser p swordfish
  login

  run
  Rowan projectTools load
    loadProjectFromSpecUrl: 'file:$ROWAN_PROJECTS_HOME/smalltalkCI/gemstone/rowan/specs/SmalltalkCI_kernel.ston'.
  false ifTrue: [
		"do this for DataCurator"
		Rowan projectTools browser 
    	addRowanSymbolDictionariesToPersistentSymbolList ]. 
%
  commit

  run
  Rowan projectTools load
    loadProjectFromSpecUrl: 'file:$ROWAN_PROJECTS_HOME/smalltalkCI/gemstone/rowan/specs/SmalltalkCI.ston'.
%
  commit

  logout

  set user SystemUser p swordfish
  login

  run
  Rowan projectTools load
    loadProjectFromSpecUrl: 'file:$ROWAN_PROJECTS_HOME/smalltalkCI/gemstone/rowan/specs/SmalltalkCI_globals.ston'
    projectRootPath: '$ROWAN_PROJECTS_HOME/smalltalkCI'.
%
  commit

  logout

  set user DataCurator p swordfish
  set user SystemUser p swordfish
  login

  run
	| suite strm res |
	suite := Rowan projectTools test testSuiteForProjectsNamed: #( 'smalltalkCI' "'Rowan' 'STON' 'Cypress' 'Tonel'" ).
	res := suite run.
	strm := WriteStream on: String new.
  strm nextPutAll: suite name; lf.
	strm nextPutAll: res printString; lf.
	strm nextPutAll: '  errors'; lf.
	(res errors collect: [:each | each printString ]) asArray sort do: [:each |
		strm tab; nextPutAll: each; lf].
	res failures size = 0
		ifTrue: [ ^ strm contents ].
	strm nextPutAll: '  failures'; lf.
		(res failures collect: [:each | each printString]) asArray sort do: [:each |
		strm tab; nextPutAll: each; lf].
	strm contents
%

  exit
EOF

